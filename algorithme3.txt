PROCEDURE dot_product(VAR v1 ,v2 : ARRAY_OF INTEGER[n];)
VAR
prod,sum : ARRAY_OF INTEGER[n];
BEGIN
    FOR i FROM 0 TO n-1   DO
        prod[i]:=v1[i]*v2[i]
        write(prod[i])
    END_FOR
    FOR i FROM 0 TO n-2   DO
        sum[i]:=prod[i]+prod[i+1]
    END_FOR
    write(sum[0])
    IF (sum[0]=0) THEN
        write(vectors are orthogonal)
        
        ELSE
            write(Vectors  are not orthogonal)
        END_IF
    END_IF
END
ALGORITHM Calcul_vectoriel 
VAR
n:INTEGER
vector1,vector2 : ARRAY_OF INTEGER[50];
BEGIN
    Read(n)
    dot_product(vector1,vector2,n)

ENDPROCEDURE dot_product(VAR v1 ,v2 : ARRAY_OF INTEGER[n];)
VAR
prod,sum : ARRAY_OF INTEGER[n];
BEGIN
    FOR i FROM 0 TO n-1   DO
        prod[i]:=v1[i]*v2[i]
        write(prod[i])
    END_FOR
    FOR i FROM 0 TO n-2   DO
        sum[i]:=prod[i]+prod[i+1]
    END_FOR
    write(sum[0])
    IF (sum[0]=0) THEN
        write(vectors are orthogonal)
        
        ELSE
            write(Vectors  are not orthogonal)
        END_IF
    END_IF
END
ALGORITHM Calcul_vectoriel 
VAR
n:INTEGER
vector1,vector2 : ARRAY_OF INTEGER[50];
BEGIN
    Read(n)
    dot_product(vector1,vector2,n)

END
////////////////////////////////////////
program with function 
FUNCTION dot_prod(VAR v1 ,v2 : ARRAY_OF INTEGER[n];) : prod : ARRAY_OF INTEGER[50];
VAR
prod,sum : ARRAY_OF INTEGER[n];
BEGIN
    FOR i FROM 0 TO n-1   DO
        prod[i]:=v1[i]*v2[i]
        
    END_FOR

    RETURN prod ;
END


ALGORITHM Calcul_vectoriel 
VAR
n:INTEGER
vector1,vector2 ,vector_pro: ARRAY_OF INTEGER[50];
BEGIN
    Read(n)
     vector_pro: dot_product(vector1,vector2,n)
     
    FOR i FROM 0 TO n-2   DO
        sum[i]:=prod[i]+prod[i+1]
    END_FOR
 
    IF (sum[0]=0) THEN
        write(vectors are orthogonal)
        
        ELSE
            write(Vectors  are not orthogonal)
        END_IF
    END_IF
END

END